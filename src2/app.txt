Folder Structure

components/
Modal.js
Modal.css
SmartInput.js
SmartInput.css

components/Modal.js
import React from 'react';
import './Modal.css';
import { FaTimes } from 'react-icons/fa';
const Modal = ({ isOpen, onClouse, children }) => {
 if (!isOpen) return null;
 return (
<div className="modal-overlay" onClick={onClose}>
<div className="modal-content" onClick={(e) => e.stopPropagation()}>
<button className="modal-close" onClick={onClose}>
<FaTimes />
</button>
       {children}
</div>
</div>
 );
};
export default Modal;

components/Modal.css
.modal-overlay {
 position: fixed;
 top: 0;
 left: 0;
 width: 100%;
 height: 100%;
 background-color: rgba(0, 0, 0, 0.5);
 display: flex;
 align-items: center;
 justify-content: center;
 z-index: 1000;
}
.modal-content {
 background: #fff;
 padding: 20px;
 width: 90%;
 max-width: 500px;
 border-radius: 8px;
 position: relative;
}
.modal-close {
 position: absolute;
 top: 10px;
 right: 12px;
 background: none;
 border: none;
 font-size: 18px;
 cursor: pointer;
}

components/SmartInput.js
import React, { useState } from 'react';
import Modal from './Modal';
import {
 FaSearch,
 FaPaperclip,
 FaSmile,
 FaBell,
 FaMicrophone,
 FaUserCircle,
 FaArrowRight,
} from 'react-icons/fa';
import './SmartInput.css';
const SmartInput = ({
 placeholder = "Type something...",
 iconsStart = [FaSearch, FaPaperclip],
 iconsEnd = [FaSmile, FaBell],
 iconStart = <FaUserCircle />,
 iconEnd = <FaArrowRight />
}) => {
 const [inputValue, setInputValue] = useState('');
 const [showModal, setShowModal] = useState(false);
 const [isListening, setIsListening] = useState(false);
 const handleVoiceToText = () => {
   if (!('webkitSpeechRecognition' in window)) {
     alert('Speech recognition not supported');
     return;
   }
   const recognition = new window.webkitSpeechRecognition();
   recognition.lang = 'en-US';
   recognition.start();
   setIsListening(true);
   recognition.onresult = (event) => {
     const transcript = event.results[0][0].transcript;
     setInputValue(prev => prev ? `${prev} ${transcript}` : transcript);
     setIsListening(false);
   };
   recognition.onerror = () => setIsListening(false);
 };
 return (
<>
<div className="smart-input" onClick={() => setShowModal(true)}>
       {iconStart && <span className="input-icon">{iconStart}</span>}
       {iconsStart.map((Icon, index) => (
<span key={index} className="input-icon"><Icon /></span>
       ))}
<input
         type="text"
         value={inputValue}
         placeholder={placeholder}
         readOnly
       />
       {iconsEnd.map((Icon, index) => (
<span key={index} className="input-icon"><Icon /></span>
       ))}
       {iconEnd && <span className="input-icon">{iconEnd}</span>}
</div>
<Modal isOpen={showModal} onClose={() => setShowModal(false)}>
<div className="modal-input-wrapper">
<input
           type="text"
           value={inputValue}
           onChange={(e) => setInputValue(e.target.value)}
           placeholder={placeholder}
           className="modal-input"
           autoFocus
         />
<button className="voice-btn" onClick={handleVoiceToText}>
<FaMicrophone />
</button>
</div>
</Modal>
</>
 );
};
export default SmartInput;

components/SmartInput.css
.smart-input {
 display: flex;
 align-items: center;
 padding: 10px;
 border: 1px solid #ccc;
 border-radius: 6px;
 gap: 6px;
 max-width: 400px;
 cursor: pointer;
 background-color: white;
}
.smart-input input {
 flex: 1;
 border: none;
 outline: none;
 background: transparent;
 font-size: 16px;
}
.input-icon {
 font-size: 18px;
 color: #555;
}
.modal-input-wrapper {
 display: flex;
 align-items: center;
 gap: 10px;
}
.modal-input {
 flex: 1;
 padding: 10px;
 font-size: 18px;
 border: 1px solid #ccc;
 border-radius: 6px;
}
.voice-btn {
 background: none;
 border: none;
 font-size: 20px;
 color: #007bff;
 cursor: pointer;
}

App.js â€“ Using the SmartInput
import React from 'react';
import SmartInput from './components/SmartInput';
function App() {
 return (
<div style={{ padding: '40px' }}>
<h2>Smart Input with Voice Search</h2>
<SmartInput />
</div>
 );
}
export default App;